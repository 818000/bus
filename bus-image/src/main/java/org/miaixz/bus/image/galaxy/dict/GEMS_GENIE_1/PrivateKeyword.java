/*
 ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
 ~                                                                               ~
 ~ The MIT License (MIT)                                                         ~
 ~                                                                               ~
 ~ Copyright (c) 2015-2025 miaixz.org and other contributors.                    ~
 ~                                                                               ~
 ~ Permission is hereby granted, free of charge, to any person obtaining a copy  ~
 ~ of this software and associated documentation files (the "Software"), to deal ~
 ~ in the Software without restriction, including without limitation the rights  ~
 ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell     ~
 ~ copies of the Software, and to permit persons to whom the Software is         ~
 ~ furnished to do so, subject to the following conditions:                      ~
 ~                                                                               ~
 ~ The above copyright notice and this permission notice shall be included in    ~
 ~ all copies or substantial portions of the Software.                           ~
 ~                                                                               ~
 ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    ~
 ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,      ~
 ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE   ~
 ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER        ~
 ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, ~
 ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN     ~
 ~ THE SOFTWARE.                                                                 ~
 ~                                                                               ~
 ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
*/
package org.miaixz.bus.image.galaxy.dict.GEMS_GENIE_1;

/**
 * @author Kimi Liu
 * @since Java 17+
 */
public class PrivateKeyword {

    public static final String PrivateCreator = "";

    public static String valueOf(int tag) {

        switch (tag & 0xFFFF00FF) {
        case PrivateTag._0009_xx01_:
            return "_0009_xx01_";
        case PrivateTag.StudyName:
            return "StudyName";
        case PrivateTag.StudyFlags:
            return "StudyFlags";
        case PrivateTag.StudyType:
            return "StudyType";
        case PrivateTag.DatasetUID:
            return "DatasetUID";
        case PrivateTag.SeriesObjectName:
            return "SeriesObjectName";
        case PrivateTag.SeriesFlags:
            return "SeriesFlags";
        case PrivateTag.UserOrientation:
            return "UserOrientation";
        case PrivateTag.InitiationType:
            return "InitiationType";
        case PrivateTag.InitiationDelay:
            return "InitiationDelay";
        case PrivateTag.InitiationCountRate:
            return "InitiationCountRate";
        case PrivateTag.NumberEnergySets:
            return "NumberEnergySets";
        case PrivateTag.NumberDetectors:
            return "NumberDetectors";
        case PrivateTag.NumberRRWindows:
            return "NumberRRWindows";
        case PrivateTag.NumberMGTimeSlots:
            return "NumberMGTimeSlots";
        case PrivateTag.NumberViewSets:
            return "NumberViewSets";
        case PrivateTag.TriggerHistoryUID:
            return "TriggerHistoryUID";
        case PrivateTag.SeriesComments:
            return "SeriesComments";
        case PrivateTag.TrackBeatAverage:
            return "TrackBeatAverage";
        case PrivateTag.DistancePrescribed:
            return "DistancePrescribed";
        case PrivateTag.TableDirection:
            return "TableDirection";
        case PrivateTag._0009_xx30_:
            return "_0009_xx30_";
        case PrivateTag.RotationalContinuousSpeed:
            return "RotationalContinuousSpeed";
        case PrivateTag.GantryMotionTypeRetired:
            return "GantryMotionTypeRetired";
        case PrivateTag.GantryLocusType:
            return "GantryLocusType";
        case PrivateTag.StartingHeartRate:
            return "StartingHeartRate";
        case PrivateTag.RRWindowWidth:
            return "RRWindowWidth";
        case PrivateTag.RRWindowOffset:
            return "RRWindowOffset";
        case PrivateTag.PercentCycleImaged:
            return "PercentCycleImaged";
        case PrivateTag.PatientObjectName:
            return "PatientObjectName";
        case PrivateTag.PatientFlags:
            return "PatientFlags";
        case PrivateTag.PatientCreationDate:
            return "PatientCreationDate";
        case PrivateTag.PatientCreationTime:
            return "PatientCreationTime";
        case PrivateTag.NumViewsAcquiredRetired:
            return "NumViewsAcquiredRetired";
        case PrivateTag._0009_xx45_:
            return "_0009_xx45_";
        case PrivateTag._0009_xx46_:
            return "_0009_xx46_";
        case PrivateTag.SeriesType:
            return "SeriesType";
        case PrivateTag.EffectiveSeriesDuration:
            return "EffectiveSeriesDuration";
        case PrivateTag.NumBeats:
            return "NumBeats";
        case PrivateTag.RadioNuclideName:
            return "RadioNuclideName";
        case PrivateTag.DatasetObjectName:
            return "DatasetObjectName";
        case PrivateTag.DatasetModified:
            return "DatasetModified";
        case PrivateTag.DatasetName:
            return "DatasetName";
        case PrivateTag.DatasetType:
            return "DatasetType";
        case PrivateTag.CompletionTime:
            return "CompletionTime";
        case PrivateTag.DetectorNumber:
            return "DetectorNumber";
        case PrivateTag.EnergyNumber:
            return "EnergyNumber";
        case PrivateTag.RRIntervalWindowNumber:
            return "RRIntervalWindowNumber";
        case PrivateTag.MGBinNumber:
            return "MGBinNumber";
        case PrivateTag.RadiusOfRotation:
            return "RadiusOfRotation";
        case PrivateTag.DetectorCountZone:
            return "DetectorCountZone";
        case PrivateTag.NumEnergyWindows:
            return "NumEnergyWindows";
        case PrivateTag.EnergyOffset:
            return "EnergyOffset";
        case PrivateTag.EnergyRange:
            return "EnergyRange";
        case PrivateTag.EnergyWidthRetired:
            return "EnergyWidthRetired";
        case PrivateTag.ImageOrientation:
            return "ImageOrientation";
        case PrivateTag.AcqZoomRetired:
            return "AcqZoomRetired";
        case PrivateTag.AcqPanRetired:
            return "AcqPanRetired";
        case PrivateTag.UseFOVMask:
            return "UseFOVMask";
        case PrivateTag.FOVMaskYCutoffAngle:
            return "FOVMaskYCutoffAngle";
        case PrivateTag.FOVMaskCutoffAngle:
            return "FOVMaskCutoffAngle";
        case PrivateTag.TableOrientation:
            return "TableOrientation";
        case PrivateTag.ROITopLeft:
            return "ROITopLeft";
        case PrivateTag.ROIBottomRight:
            return "ROIBottomRight";
        case PrivateTag.UniformityMean:
            return "UniformityMean";
        case PrivateTag.PhaseDurationRetired:
            return "PhaseDurationRetired";
        case PrivateTag.ViewXAdjustment:
            return "ViewXAdjustment";
        case PrivateTag.ViewYAdjustment:
            return "ViewYAdjustment";
        case PrivateTag.PixelOverflowFlag:
            return "PixelOverflowFlag";
        case PrivateTag.OverflowLevel:
            return "OverflowLevel";
        case PrivateTag.PictureObjectName:
            return "PictureObjectName";
        case PrivateTag.AcquisitionParentUID:
            return "AcquisitionParentUID";
        case PrivateTag.ProcessingParentUID:
            return "ProcessingParentUID";
        case PrivateTag.EnergyCorrectName:
            return "EnergyCorrectName";
        case PrivateTag.SpatialCorrectName:
            return "SpatialCorrectName";
        case PrivateTag.TuningCalibName:
            return "TuningCalibName";
        case PrivateTag.UniformityCorrectName:
            return "UniformityCorrectName";
        case PrivateTag.AcquisitionSpecificCorrectName:
            return "AcquisitionSpecificCorrectName";
        case PrivateTag.ByteOrder:
            return "ByteOrder";
        case PrivateTag.CompressionType:
            return "CompressionType";
        case PrivateTag.PictureFormat:
            return "PictureFormat";
        case PrivateTag.PixelScale:
            return "PixelScale";
        case PrivateTag.PixelOffset:
            return "PixelOffset";
        case PrivateTag.EnergyPeakRetired:
            return "EnergyPeakRetired";
        case PrivateTag.FOVShape:
            return "FOVShape";
        case PrivateTag.DatasetFlags:
            return "DatasetFlags";
        case PrivateTag.ViewingObjectName:
            return "ViewingObjectName";
        case PrivateTag.OrientationAngle:
            return "OrientationAngle";
        case PrivateTag.RotationAngle:
            return "RotationAngle";
        case PrivateTag.WindowInverseFlag:
            return "WindowInverseFlag";
        case PrivateTag.ThresholdCenter:
            return "ThresholdCenter";
        case PrivateTag.ThresholdWidth:
            return "ThresholdWidth";
        case PrivateTag.InterpolationType:
            return "InterpolationType";
        case PrivateTag.WhereObjectName:
            return "WhereObjectName";
        case PrivateTag.Period:
            return "Period";
        case PrivateTag.ElapsedTime:
            return "ElapsedTime";
        case PrivateTag.FOV:
            return "FOV";
        case PrivateTag.ImageSize:
            return "ImageSize";
        case PrivateTag.LinearFOV:
            return "LinearFOV";
        case PrivateTag.SpatialOffset:
            return "SpatialOffset";
        case PrivateTag.SpatialOrientation:
            return "SpatialOrientation";
        case PrivateTag.ReferenceDatasetUID:
            return "ReferenceDatasetUID";
        case PrivateTag.StarcamReferenceDataset:
            return "StarcamReferenceDataset";
        case PrivateTag.ReferenceFrameNumber:
            return "ReferenceFrameNumber";
        case PrivateTag.CursorLength:
            return "CursorLength";
        case PrivateTag.NumberOfCursors:
            return "NumberOfCursors";
        case PrivateTag.CursorCoordinates:
            return "CursorCoordinates";
        case PrivateTag.ReconOptionsFlag:
            return "ReconOptionsFlag";
        case PrivateTag.MotionThreshold:
            return "MotionThreshold";
        case PrivateTag.MotionCurveUID:
            return "MotionCurveUID";
        case PrivateTag.ReconType:
            return "ReconType";
        case PrivateTag.PreFilterType:
            return "PreFilterType";
        case PrivateTag.BackProjFilterType:
            return "BackProjFilterType";
        case PrivateTag.ReconArc:
            return "ReconArc";
        case PrivateTag.ReconPanAPOffset:
            return "ReconPanAPOffset";
        case PrivateTag.ReconPanLROffset:
            return "ReconPanLROffset";
        case PrivateTag.ReconArea:
            return "ReconArea";
        case PrivateTag.StartView:
            return "StartView";
        case PrivateTag.AttenuationType:
            return "AttenuationType";
        case PrivateTag.DualEnergyProcessing:
            return "DualEnergyProcessing";
        case PrivateTag.PreFilterParam:
            return "PreFilterParam";
        case PrivateTag.PreFilterParam2:
            return "PreFilterParam2";
        case PrivateTag.BackProjFilterParam:
            return "BackProjFilterParam";
        case PrivateTag.BackProjFilterParam2:
            return "BackProjFilterParam2";
        case PrivateTag.AttenuationCoef:
            return "AttenuationCoef";
        case PrivateTag.RefSliceWidth:
            return "RefSliceWidth";
        case PrivateTag.RefTransPixelVolume:
            return "RefTransPixelVolume";
        case PrivateTag.AttenuationThreshold:
            return "AttenuationThreshold";
        case PrivateTag.InterpolationDistance:
            return "InterpolationDistance";
        case PrivateTag.InterpolationCenterX:
            return "InterpolationCenterX";
        case PrivateTag.InterpolationCenterY:
            return "InterpolationCenterY";
        case PrivateTag.QuantFilterFlag:
            return "QuantFilterFlag";
        case PrivateTag.HeadConversion:
            return "HeadConversion";
        case PrivateTag.SliceWidthPixels:
            return "SliceWidthPixels";
        case PrivateTag.RfmtrTransRef:
            return "RfmtrTransRef";
        case PrivateTag.RfmtrTransRefmm:
            return "RfmtrTransRefmm";
        case PrivateTag.TwoLineTransRef:
            return "TwoLineTransRef";
        case PrivateTag.ThreeDZero:
            return "ThreeDZero";
        case PrivateTag.ThreeDZeroLength:
            return "ThreeDZeroLength";
        case PrivateTag.ThreeDZeroIn:
            return "ThreeDZeroIn";
        case PrivateTag.DigitalFOV:
            return "DigitalFOV";
        case PrivateTag.SourceTranslator:
            return "SourceTranslator";
        case PrivateTag.RALFlags:
            return "RALFlags";
        case PrivateTag.eNTEGRAFrameSequence:
            return "eNTEGRAFrameSequence";
        case PrivateTag.OriginalImageNumber:
            return "OriginalImageNumber";
        case PrivateTag.Fscalar:
            return "Fscalar";
        case PrivateTag.AutoTrackPeak:
            return "AutoTrackPeak";
        case PrivateTag.AutoTrackWidth:
            return "AutoTrackWidth";
        case PrivateTag.TransmissionScanTime:
            return "TransmissionScanTime";
        case PrivateTag.TransmissionMaskWidth:
            return "TransmissionMaskWidth";
        case PrivateTag.CopperAttenuatorThickness:
            return "CopperAttenuatorThickness";
        case PrivateTag.DetAngSeparation:
            return "DetAngSeparation";
        case PrivateTag.AxialAcceptanceAngle:
            return "AxialAcceptanceAngle";
        case PrivateTag.ThetaAcceptanceValue:
            return "ThetaAcceptanceValue";
        case PrivateTag.TomoViewOffset:
            return "TomoViewOffset";
        case PrivateTag.AcceptedBeatsTime:
            return "AcceptedBeatsTime";
        case PrivateTag.Threshold:
            return "Threshold";
        case PrivateTag.LinearDepth:
            return "LinearDepth";
        case PrivateTag.UnifDateTime:
            return "UnifDateTime";
        case PrivateTag.SeriesAcceptedBeats:
            return "SeriesAcceptedBeats";
        case PrivateTag.SeriesRejectedBeats:
            return "SeriesRejectedBeats";
        case PrivateTag.StudyComments:
            return "StudyComments";
        case PrivateTag.FrameTerminationCondition:
            return "FrameTerminationCondition";
        case PrivateTag.FrameTerminationValue:
            return "FrameTerminationValue";
        case PrivateTag.NumECTPhases:
            return "NumECTPhases";
        case PrivateTag.NumWBScans:
            return "NumWBScans";
        case PrivateTag.ECTPhaseNum:
            return "ECTPhaseNum";
        case PrivateTag.WBScanNum:
            return "WBScanNum";
        case PrivateTag.CombHeadNumber:
            return "CombHeadNumber";
        case PrivateTag.PrecedingBeat:
            return "PrecedingBeat";
        case PrivateTag._0019_xx5F_:
            return "_0019_xx5F_";
        case PrivateTag.OriginalSOPInstanceUID:
            return "OriginalSOPInstanceUID";
        case PrivateTag.eNTEGRADataObjectType:
            return "eNTEGRADataObjectType";
        case PrivateTag.Modified:
            return "Modified";
        case PrivateTag.Name:
            return "Name";
        case PrivateTag.ProtocolDataUID:
            return "ProtocolDataUID";
        case PrivateTag.Date:
            return "Date";
        case PrivateTag.Time:
            return "Time";
        case PrivateTag.ProtocolDataFlags:
            return "ProtocolDataFlags";
        case PrivateTag.ProtocolName:
            return "ProtocolName";
        case PrivateTag.RelevantDataUID:
            return "RelevantDataUID";
        case PrivateTag.BulkData:
            return "BulkData";
        case PrivateTag.IntData:
            return "IntData";
        case PrivateTag.DoubleData:
            return "DoubleData";
        case PrivateTag.StringData:
            return "StringData";
        case PrivateTag.BulkDataFormat:
            return "BulkDataFormat";
        case PrivateTag.IntDataFormat:
            return "IntDataFormat";
        case PrivateTag.DoubleDataFormat:
            return "DoubleDataFormat";
        case PrivateTag.StringDataFormat:
            return "StringDataFormat";
        case PrivateTag.Description:
            return "Description";
        case PrivateTag.AllocateTriggerBuffer:
            return "AllocateTriggerBuffer";
        case PrivateTag.NumberOfTriggers:
            return "NumberOfTriggers";
        case PrivateTag.TriggerSize:
            return "TriggerSize";
        case PrivateTag.TriggerDataSize:
            return "TriggerDataSize";
        case PrivateTag.TriggerData:
            return "TriggerData";
        case PrivateTag.StartAngle:
            return "StartAngle";
        case PrivateTag.eNTEGRAEnergyWindowInformationSequence:
            return "eNTEGRAEnergyWindowInformationSequence";
        case PrivateTag.eNTEGRAEnergyWindowRangeSequence:
            return "eNTEGRAEnergyWindowRangeSequence";
        case PrivateTag.eNTEGRADetectorInformationSequence:
            return "eNTEGRADetectorInformationSequence";
        case PrivateTag.eNTEGRARotationInformationSequence:
            return "eNTEGRARotationInformationSequence";
        case PrivateTag.eNTEGRAGatedInformationSequence:
            return "eNTEGRAGatedInformationSequence";
        case PrivateTag.eNTEGRADataInformationSequence:
            return "eNTEGRADataInformationSequence";
        case PrivateTag.SDODoubleDataSequence:
            return "SDODoubleDataSequence";
        case PrivateTag._0055_xx65_:
            return "_0055_xx65_";
        case PrivateTag.Cid:
            return "Cid";
        case PrivateTag.Srid:
            return "Srid";
        case PrivateTag.SOPClassUID:
            return "SOPClassUID";
        case PrivateTag.SOPInstanceUID:
            return "SOPInstanceUID";
        case PrivateTag.CurveType:
            return "CurveType";
        case PrivateTag.GraphType:
            return "GraphType";
        case PrivateTag.Legend:
            return "Legend";
        case PrivateTag.XUnits:
            return "XUnits";
        case PrivateTag.YUnits:
            return "YUnits";
        case PrivateTag.Edit:
            return "Edit";
        case PrivateTag.Suspend:
            return "Suspend";
        case PrivateTag.StyleLine:
            return "StyleLine";
        case PrivateTag.StyleFill:
            return "StyleFill";
        case PrivateTag.StyleColour:
            return "StyleColour";
        case PrivateTag.StyleWidth:
            return "StyleWidth";
        case PrivateTag.StylePoint:
            return "StylePoint";
        case PrivateTag.StylePColour:
            return "StylePColour";
        case PrivateTag.StylePSize:
            return "StylePSize";
        case PrivateTag.Segments:
            return "Segments";
        case PrivateTag.SegType:
            return "SegType";
        case PrivateTag.SegStart:
            return "SegStart";
        case PrivateTag.SegEnd:
            return "SegEnd";
        case PrivateTag.SegStyleLine:
            return "SegStyleLine";
        case PrivateTag.SegStyleFill:
            return "SegStyleFill";
        case PrivateTag.SegStyleColour:
            return "SegStyleColour";
        case PrivateTag.SegStyleWidth:
            return "SegStyleWidth";
        case PrivateTag.SegStylePoint:
            return "SegStylePoint";
        case PrivateTag.SegStylePColour:
            return "SegStylePColour";
        case PrivateTag.SegStylePSize:
            return "SegStylePSize";
        case PrivateTag.SegName:
            return "SegName";
        case PrivateTag.SegAllowDirInt:
            return "SegAllowDirInt";
        case PrivateTag.TextAnnots:
            return "TextAnnots";
        case PrivateTag.TxtX:
            return "TxtX";
        case PrivateTag.TxtY:
            return "TxtY";
        case PrivateTag.TxtText:
            return "TxtText";
        case PrivateTag.TxtName:
            return "TxtName";
        case PrivateTag.ROIName:
            return "ROIName";
        case PrivateTag.DerivedFromImageUID:
            return "DerivedFromImageUID";
        case PrivateTag.DerivedFromImages:
            return "DerivedFromImages";
        case PrivateTag.CurveFlags:
            return "CurveFlags";
        case PrivateTag.CurveName:
            return "CurveName";
        case PrivateTag.CurveUID:
            return "CurveUID";
        case PrivateTag.ROIArea:
            return "ROIArea";
        case PrivateTag.SoftwareVersion:
            return "SoftwareVersion";
        case PrivateTag.StartDate:
            return "StartDate";
        case PrivateTag.CompletionDate:
            return "CompletionDate";
        case PrivateTag.DetectorName:
            return "DetectorName";
        case PrivateTag.NormalColor:
            return "NormalColor";
        case PrivateTag.NameFont:
            return "NameFont";
        case PrivateTag.FillPattern:
            return "FillPattern";
        case PrivateTag.LineStyle:
            return "LineStyle";
        case PrivateTag.LineDashLength:
            return "LineDashLength";
        case PrivateTag.LineThickness:
            return "LineThickness";
        case PrivateTag.Interactivity:
            return "Interactivity";
        case PrivateTag.NamePos:
            return "NamePos";
        case PrivateTag.NameDisplay:
            return "NameDisplay";
        case PrivateTag.Label:
            return "Label";
        case PrivateTag.BpSeg:
            return "BpSeg";
        case PrivateTag.BpSegPairs:
            return "BpSegPairs";
        case PrivateTag.SeedSpace:
            return "SeedSpace";
        case PrivateTag.Seeds:
            return "Seeds";
        case PrivateTag.Shape:
            return "Shape";
        case PrivateTag.ShapeTilt:
            return "ShapeTilt";
        case PrivateTag.ShapePtsSpace:
            return "ShapePtsSpace";
        case PrivateTag.ShapeCtrlPtsCounts:
            return "ShapeCtrlPtsCounts";
        case PrivateTag.ShapeCtrlPts:
            return "ShapeCtrlPts";
        case PrivateTag.ShapeCtrlPSpace:
            return "ShapeCtrlPSpace";
        case PrivateTag.ROIFlags:
            return "ROIFlags";
        case PrivateTag.FrameNumber:
            return "FrameNumber";
        case PrivateTag.ID:
            return "ID";
        case PrivateTag.DatasetROIMapping:
            return "DatasetROIMapping";
        }
        return "";
    }

}
