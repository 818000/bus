/*
 ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
 ~                                                                               ~
 ~ The MIT License (MIT)                                                         ~
 ~                                                                               ~
 ~ Copyright (c) 2015-2024 miaixz.org and other contributors.                    ~
 ~                                                                               ~
 ~ Permission is hereby granted, free of charge, to any person obtaining a copy  ~
 ~ of this software and associated documentation files (the "Software"), to deal ~
 ~ in the Software without restriction, including without limitation the rights  ~
 ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell     ~
 ~ copies of the Software, and to permit persons to whom the Software is         ~
 ~ furnished to do so, subject to the following conditions:                      ~
 ~                                                                               ~
 ~ The above copyright notice and this permission notice shall be included in    ~
 ~ all copies or substantial portions of the Software.                           ~
 ~                                                                               ~
 ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    ~
 ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,      ~
 ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE   ~
 ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER        ~
 ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, ~
 ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN     ~
 ~ THE SOFTWARE.                                                                 ~
 ~                                                                               ~
 ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
 */
package org.miaixz.bus.image.galaxy.dict.GEMS_ACQU_01;

/**
 * @author Kimi Liu
 * @since Java 17+
 */
public class PrivateKeyword {

    public static final String PrivateCreator = "";

    public static String valueOf(int tag) {
    
        switch (tag & 0xFFFF00FF) {
                case PrivateTag._0009_xx24_:
            return "_0009_xx24_";
        case PrivateTag._0009_xx25_:
            return "_0009_xx25_";
        case PrivateTag._0009_xx3E_:
            return "_0009_xx3E_";
        case PrivateTag._0009_xx3F_:
            return "_0009_xx3F_";
        case PrivateTag._0009_xx42_:
            return "_0009_xx42_";
        case PrivateTag._0009_xx43_:
            return "_0009_xx43_";
        case PrivateTag._0009_xxF8_:
            return "_0009_xxF8_";
        case PrivateTag._0009_xxFB_:
            return "_0009_xxFB_";
        case PrivateTag._0019_xx01_:
            return "_0019_xx01_";
        case PrivateTag.NumberOfCellsInDetector:
            return "NumberOfCellsInDetector";
        case PrivateTag.CellNumberAtTheta:
            return "CellNumberAtTheta";
        case PrivateTag.CellSpacing:
            return "CellSpacing";
        case PrivateTag._0019_xx05_:
            return "_0019_xx05_";
        case PrivateTag._0019_xx06_:
            return "_0019_xx06_";
        case PrivateTag._0019_xx0E_:
            return "_0019_xx0E_";
        case PrivateTag.HorizontalFrameOfReference:
            return "HorizontalFrameOfReference";
        case PrivateTag.SeriesContrast:
            return "SeriesContrast";
        case PrivateTag.LastPseq:
            return "LastPseq";
        case PrivateTag.StartNumberForBaseline:
            return "StartNumberForBaseline";
        case PrivateTag.EndNumberForBaseline:
            return "EndNumberForBaseline";
        case PrivateTag.StartNumberForEnhancedScans:
            return "StartNumberForEnhancedScans";
        case PrivateTag.EndNumberForEnhancedScans:
            return "EndNumberForEnhancedScans";
        case PrivateTag.SeriesPlane:
            return "SeriesPlane";
        case PrivateTag.FirstScanRAS:
            return "FirstScanRAS";
        case PrivateTag.FirstScanLocation:
            return "FirstScanLocation";
        case PrivateTag.LastScanRAS:
            return "LastScanRAS";
        case PrivateTag.LastScanLocation:
            return "LastScanLocation";
        case PrivateTag.DisplayFieldOfView:
            return "DisplayFieldOfView";
        case PrivateTag._0019_xx20_:
            return "_0019_xx20_";
        case PrivateTag._0019_xx22_:
            return "_0019_xx22_";
        case PrivateTag.TableSpeed:
            return "TableSpeed";
        case PrivateTag.MidScanTime:
            return "MidScanTime";
        case PrivateTag.MidScanFlag:
            return "MidScanFlag";
        case PrivateTag.TubeAzimuth:
            return "TubeAzimuth";
        case PrivateTag.RotationSpeed:
            return "RotationSpeed";
        case PrivateTag.XrayOnPosition:
            return "XrayOnPosition";
        case PrivateTag.XrayOffPosition:
            return "XrayOffPosition";
        case PrivateTag.NumberOfTriggers:
            return "NumberOfTriggers";
        case PrivateTag._0019_xx2D_:
            return "_0019_xx2D_";
        case PrivateTag.AngleOfFirstView:
            return "AngleOfFirstView";
        case PrivateTag.TriggerFrequency:
            return "TriggerFrequency";
        case PrivateTag.ScanFOVType:
            return "ScanFOVType";
        case PrivateTag._0019_xx3A_:
            return "_0019_xx3A_";
        case PrivateTag._0019_xx3B_:
            return "_0019_xx3B_";
        case PrivateTag._0019_xx3C_:
            return "_0019_xx3C_";
        case PrivateTag._0019_xx3E_:
            return "_0019_xx3E_";
        case PrivateTag._0019_xx3F_:
            return "_0019_xx3F_";
        case PrivateTag.StatReconFlag:
            return "StatReconFlag";
        case PrivateTag.ComputeType:
            return "ComputeType";
        case PrivateTag.SegmentNumber:
            return "SegmentNumber";
        case PrivateTag.TotalSegmentsRequired:
            return "TotalSegmentsRequired";
        case PrivateTag.InterscanDelay:
            return "InterscanDelay";
        case PrivateTag.ViewCompressionFactor:
            return "ViewCompressionFactor";
        case PrivateTag._0019_xx48_:
            return "_0019_xx48_";
        case PrivateTag._0019_xx49_:
            return "_0019_xx49_";
        case PrivateTag.TotalNumberOfRefChannels:
            return "TotalNumberOfRefChannels";
        case PrivateTag.DataSizeForScanData:
            return "DataSizeForScanData";
        case PrivateTag.ReconPostProcessingFlag:
            return "ReconPostProcessingFlag";
        case PrivateTag._0019_xx54_:
            return "_0019_xx54_";
        case PrivateTag.CTWaterNumber:
            return "CTWaterNumber";
        case PrivateTag.CTBoneNumber:
            return "CTBoneNumber";
        case PrivateTag.AcquisitionDuration:
            return "AcquisitionDuration";
        case PrivateTag._0019_xx5D_:
            return "_0019_xx5D_";
        case PrivateTag.NumberOfChannels1To512:
            return "NumberOfChannels1To512";
        case PrivateTag.IncrementBetweenChannels:
            return "IncrementBetweenChannels";
        case PrivateTag.StartingView:
            return "StartingView";
        case PrivateTag.NumberOfViews:
            return "NumberOfViews";
        case PrivateTag.IncrementBetweenViews:
            return "IncrementBetweenViews";
        case PrivateTag.DependantOnNumberOfViewsProcessed:
            return "DependantOnNumberOfViewsProcessed";
        case PrivateTag.FieldOfViewInDetectorCells:
            return "FieldOfViewInDetectorCells";
        case PrivateTag.ValueOfBackProjectionButton:
            return "ValueOfBackProjectionButton";
        case PrivateTag.SetIfFatqEstimatesWereUsed:
            return "SetIfFatqEstimatesWereUsed";
        case PrivateTag.ZChannelAvgOverViews:
            return "ZChannelAvgOverViews";
        case PrivateTag.AvgOfLeftRefChannelsOverViews:
            return "AvgOfLeftRefChannelsOverViews";
        case PrivateTag.MaxLeftChannelOverViews:
            return "MaxLeftChannelOverViews";
        case PrivateTag.AvgOfRightRefChannelsOverViews:
            return "AvgOfRightRefChannelsOverViews";
        case PrivateTag.MaxRightChannelOverViews:
            return "MaxRightChannelOverViews";
        case PrivateTag.SecondEcho:
            return "SecondEcho";
        case PrivateTag.NumberOfEchos:
            return "NumberOfEchos";
        case PrivateTag.TableDelta:
            return "TableDelta";
        case PrivateTag.Contiguous:
            return "Contiguous";
        case PrivateTag._0019_xx82_:
            return "_0019_xx82_";
        case PrivateTag._0019_xx83_:
            return "_0019_xx83_";
        case PrivateTag.PeakSAR:
            return "PeakSAR";
        case PrivateTag.MonitorSAR:
            return "MonitorSAR";
        case PrivateTag._0019_xx86_:
            return "_0019_xx86_";
        case PrivateTag.CardiacRepetitionTime:
            return "CardiacRepetitionTime";
        case PrivateTag.ImagesPerCardiacCycle:
            return "ImagesPerCardiacCycle";
        case PrivateTag.ActualReceiveGainAnalog:
            return "ActualReceiveGainAnalog";
        case PrivateTag.ActualReceiveGainDigital:
            return "ActualReceiveGainDigital";
        case PrivateTag.DelayAfterTrigger:
            return "DelayAfterTrigger";
        case PrivateTag.SwapPhaseFrequency:
            return "SwapPhaseFrequency";
        case PrivateTag.PauseInterval:
            return "PauseInterval";
        case PrivateTag.PauseTime:
            return "PauseTime";
        case PrivateTag.SliceOffsetOnFrequencyAxis:
            return "SliceOffsetOnFrequencyAxis";
        case PrivateTag.AutoPrescanCenterFrequency:
            return "AutoPrescanCenterFrequency";
        case PrivateTag.AutoPrescanTransmitGain:
            return "AutoPrescanTransmitGain";
        case PrivateTag.AutoPrescanAnalogReceiverGain:
            return "AutoPrescanAnalogReceiverGain";
        case PrivateTag.AutoPrescanDigitalReceiverGain:
            return "AutoPrescanDigitalReceiverGain";
        case PrivateTag.BitmapDefiningCVs:
            return "BitmapDefiningCVs";
        case PrivateTag.CenterFrequencyMethod:
            return "CenterFrequencyMethod";
        case PrivateTag._0019_xx99_:
            return "_0019_xx99_";
        case PrivateTag.PulseSequenceMode:
            return "PulseSequenceMode";
        case PrivateTag.PulseSequenceName:
            return "PulseSequenceName";
        case PrivateTag.PulseSequenceDate:
            return "PulseSequenceDate";
        case PrivateTag.InternalPulseSequenceName:
            return "InternalPulseSequenceName";
        case PrivateTag.TransmittingCoil:
            return "TransmittingCoil";
        case PrivateTag.SurfaceCoilType:
            return "SurfaceCoilType";
        case PrivateTag.ExtremityCoilFlag:
            return "ExtremityCoilFlag";
        case PrivateTag.RawDataRunNumber:
            return "RawDataRunNumber";
        case PrivateTag.CalibratedFieldStrength:
            return "CalibratedFieldStrength";
        case PrivateTag.SATFatWaterBone:
            return "SATFatWaterBone";
        case PrivateTag.ReceiveBandwidth:
            return "ReceiveBandwidth";
        case PrivateTag.UserData0:
            return "UserData0";
        case PrivateTag.UserData1:
            return "UserData1";
        case PrivateTag.UserData2:
            return "UserData2";
        case PrivateTag.UserData3:
            return "UserData3";
        case PrivateTag.UserData4:
            return "UserData4";
        case PrivateTag.UserData5:
            return "UserData5";
        case PrivateTag.UserData6:
            return "UserData6";
        case PrivateTag.UserData7:
            return "UserData7";
        case PrivateTag.UserData8:
            return "UserData8";
        case PrivateTag.UserData9:
            return "UserData9";
        case PrivateTag.UserData10:
            return "UserData10";
        case PrivateTag.UserData11:
            return "UserData11";
        case PrivateTag.UserData12:
            return "UserData12";
        case PrivateTag.UserData13:
            return "UserData13";
        case PrivateTag.UserData14:
            return "UserData14";
        case PrivateTag.UserData15:
            return "UserData15";
        case PrivateTag.UserData16:
            return "UserData16";
        case PrivateTag.UserData17:
            return "UserData17";
        case PrivateTag.UserData18:
            return "UserData18";
        case PrivateTag.UserData19:
            return "UserData19";
        case PrivateTag.UserData20:
            return "UserData20";
        case PrivateTag.UserData21:
            return "UserData21";
        case PrivateTag.UserData22:
            return "UserData22";
        case PrivateTag.ProjectionAngle:
            return "ProjectionAngle";
        case PrivateTag.SaturationPlanes:
            return "SaturationPlanes";
        case PrivateTag.SurfaceCoilIntensityCorrectionFlag:
            return "SurfaceCoilIntensityCorrectionFlag";
        case PrivateTag.SATLocationR:
            return "SATLocationR";
        case PrivateTag.SATLocationL:
            return "SATLocationL";
        case PrivateTag.SATLocationA:
            return "SATLocationA";
        case PrivateTag.SATLocationP:
            return "SATLocationP";
        case PrivateTag.SATLocationH:
            return "SATLocationH";
        case PrivateTag.SATLocationF:
            return "SATLocationF";
        case PrivateTag.SATThicknessRL:
            return "SATThicknessRL";
        case PrivateTag.SATThicknessAP:
            return "SATThicknessAP";
        case PrivateTag.SATThicknessHF:
            return "SATThicknessHF";
        case PrivateTag.PhaseContrastFlowAxis:
            return "PhaseContrastFlowAxis";
        case PrivateTag.VelocityEncoding:
            return "VelocityEncoding";
        case PrivateTag.ThicknessDisclaimer:
            return "ThicknessDisclaimer";
        case PrivateTag.PrescanType:
            return "PrescanType";
        case PrivateTag.PrescanStatus:
            return "PrescanStatus";
        case PrivateTag.RawDataType:
            return "RawDataType";
        case PrivateTag.ProjectionAlgorithm:
            return "ProjectionAlgorithm";
        case PrivateTag.ProjectionAlgorithmName:
            return "ProjectionAlgorithmName";
        case PrivateTag._0019_xxD4_:
            return "_0019_xxD4_";
        case PrivateTag.FractionalEcho:
            return "FractionalEcho";
        case PrivateTag.PrepPulse:
            return "PrepPulse";
        case PrivateTag.CardiacPhases:
            return "CardiacPhases";
        case PrivateTag.VariableEchoFlag:
            return "VariableEchoFlag";
        case PrivateTag.ConcatenatedSatOrDTIDiffusionDirection:
            return "ConcatenatedSatOrDTIDiffusionDirection";
        case PrivateTag.ReferenceChannelUsed:
            return "ReferenceChannelUsed";
        case PrivateTag.BackProjectorCoefficient:
            return "BackProjectorCoefficient";
        case PrivateTag.PrimarySpeedCorrectionUsed:
            return "PrimarySpeedCorrectionUsed";
        case PrivateTag.OverrangeCorrectionUsed:
            return "OverrangeCorrectionUsed";
        case PrivateTag.DynamicZAlphaValue:
            return "DynamicZAlphaValue";
        case PrivateTag.UserData23:
            return "UserData23";
        case PrivateTag.UserData24:
            return "UserData24";
        case PrivateTag._0019_xxE1_:
            return "_0019_xxE1_";
        case PrivateTag.VelocityEncodeScale:
            return "VelocityEncodeScale";
        case PrivateTag._0019_xxE3_:
            return "_0019_xxE3_";
        case PrivateTag._0019_xxE4_:
            return "_0019_xxE4_";
        case PrivateTag._0019_xxE5_:
            return "_0019_xxE5_";
        case PrivateTag._0019_xxE6_:
            return "_0019_xxE6_";
        case PrivateTag._0019_xxE8_:
            return "_0019_xxE8_";
        case PrivateTag._0019_xxE9_:
            return "_0019_xxE9_";
        case PrivateTag._0019_xxEB_:
            return "_0019_xxEB_";
        case PrivateTag._0019_xxEC_:
            return "_0019_xxEC_";
        case PrivateTag._0019_xxF0_:
            return "_0019_xxF0_";
        case PrivateTag._0019_xxF1_:
            return "_0019_xxF1_";
        case PrivateTag.FastPhases:
            return "FastPhases";
        case PrivateTag._0019_xxF3_:
            return "_0019_xxF3_";
        case PrivateTag._0019_xxF4_:
            return "_0019_xxF4_";
        case PrivateTag.TransmitGain:
            return "TransmitGain";
        }
        return "";
    }

}
