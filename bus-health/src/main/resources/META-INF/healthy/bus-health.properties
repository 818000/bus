# Some containers enable alternate locations for the Linux /proc filesystem
# to provide container-level output in preference to system-level output.
# The /proc filesystem location
health.proc.path=/proc
# See https://www.kernel.org/doc/Documentation/cpu-freq/user-guide.txt
health.cpu.freq.path=/sys/devices/system/cpu/cpu
# The WMI query timeout in milliseconds
# Default is -1, no timeout
health.wmi.timeout=-1
# Whether to perform WMI queries for command lines in a batch for all running
# processes. Individual WMI queries for the command line take about 50ms while
# querying the entire process list takes about 200ms. If you regularly expect
# to query command lines for more than a few processes this should be enabled
# for better performance. If you only rarely query command lines, leaving this
# disabled will be faster and conserve some resources. Defaults to false.
health.os.windows.commandline.batch=false
# On macOS, Linux, and Unix systems, the default getSessions() method on the
# OperatingSystem interface uses native code (see {@code man getutxent}) that
# is not thread safe. OSHI's use of this code is synchronized and may be used
# in a multi-threaded environment without introducing any additional conflicts.
# Users should note, however, that other operating system code may access the
# same native code.
#
# The oshi.driver.unix.Who#queryWho() method produces similar output parsing
# the output of the Posix-standard "who" command, and may internally employ
# reentrant code on some platforms. Setting this configuration to true will
# use the command-line variant.  Defaults to false.
health.os.unix.whoCommand=false
# The name of the System event log containing bootup event IDs 12 and 6005.
#
# This is used for a one-time calculation of system boot time that should be
# consistent across process runs regardless of sleep/hibernate cycles, at
# the small cost of ~250ms latency reading upon WindowsOperatingSystem
# initialization.
#
# If the specified log is the empty string, or doesn't contain a bootup event,
# boot time will be calculated by subtracting up time from current time. This
# may vary by up to a millisecond between program executions and does not
# properly account for sleep/hibernate cycles, but when using the empty string
# is fast and may be preferred if only approximate boot time is desired.
#
# If a non-empty invalid log name is specified, the name "Application" will
# be used. The default is System
health.os.windows.eventlog=System
# Memoizer default expiration in milliseconds (return values will be cached this long)
# Must be positive (negative value will never refresh)
# Should be less than 1 second
# Default is 300 milliseconds
health.memoize.expiration=300